{"version":3,"sources":["Todo.js","TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","toggleTask","removeTask","className","complete","onClick","id","task","TodoForm","addTask","useState","userInput","setUserInput","handleSubmit","b","preventDefault","onSubmit","value","type","onChange","a","currentTarget","onKeyDown","c","key","placeholder","App","todos","setTodos","filter","handleToogle","map","length","newItem","Math","random","toString","substring","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAgBeA,MAhBf,YAAiD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAChC,OACE,sBAAmBC,UAAU,YAA7B,UACE,qBACEA,UAAWH,EAAKI,SAAW,mBAAqB,YAChDC,QAAS,kBAAMJ,EAAWD,EAAKM,KAFjC,SAIGN,EAAKO,OAER,qBAAKJ,UAAU,cAAcE,QAAS,kBAAMH,EAAWF,EAAKM,KAA5D,sBAPQN,EAAKM,KCiCJE,MAjCf,YAAgC,IAAZC,EAAW,EAAXA,QAClB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAe,SAACC,GACpBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KASf,OACE,uBAAMI,SAAUH,EAAhB,UACE,uBACEI,MAAON,EACPO,KAAK,OACLC,SArBe,SAACC,GACpBR,EAAaQ,EAAEC,cAAcJ,QAqBzBK,UAZiB,SAACC,GACR,UAAVA,EAAEC,KACJX,EAAaU,IAWXE,YAAY,eAEd,8CCoBSC,MA9Cf,WACE,MAA0BhB,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KAaM1B,EAAa,SAACI,GAClBsB,EAAS,YAAID,EAAME,QAAO,SAAC7B,GAAD,OAAUA,EAAKM,KAAOA,QAG5CwB,EAAe,SAACxB,GACpBsB,EAAS,YACJD,EAAMI,KAAI,SAAC/B,GAAD,OACXA,EAAKM,KAAOA,EAAZ,2BAAsBN,GAAtB,IAA4BI,UAAWJ,EAAKI,WAA5C,eAA8DJ,SAKpE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACE,wCAAWwB,EAAMK,YAEnB,cAAC,EAAD,CAAUvB,QA5BE,SAACE,GACf,GAAIA,EAAW,CACb,IAAMsB,EAAU,CACd3B,GAAI4B,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,GAC5C9B,KAAMI,EACNP,UAAU,GAEZwB,EAAS,GAAD,mBAAKD,GAAL,CAAYM,SAsBnBN,EAAMI,KAAI,SAAC/B,GACV,OACE,cAAC,EAAD,CACEA,KAAMA,EAENC,WAAY6B,EACZ5B,WAAYA,GAFPF,EAAKM,WC5BPgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5264190d.chunk.js","sourcesContent":["function Todo({ todo, toggleTask, removeTask }) {\n  return (\n    <div key={todo.id} className='item-todo'>\n      <div\n        className={todo.complete ? 'item-text strike' : 'item-text'}\n        onClick={() => toggleTask(todo.id)}\n      >\n        {todo.task}\n      </div>\n      <div className='item-delete' onClick={() => removeTask(todo.id)}>\n        &#10006;\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","import { useState } from 'react';\n\nfunction TodoForm({ addTask }) {\n  const [userInput, setUserInput] = useState('');\n\n  const handleChange = (a) => {\n    setUserInput(a.currentTarget.value);\n  };\n\n  const handleSubmit = (b) => {\n    b.preventDefault();\n    addTask(userInput);\n    setUserInput('');\n  };\n\n  const handleKeyPress = (c) => {\n    if (c.key === 'Enter') {\n      handleSubmit(c);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={userInput}\n        type='text'\n        onChange={handleChange}\n        onKeyDown={handleKeyPress}\n        placeholder='Input Text'\n      />\n      <button>Save</button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTask = (userInput) => {\n    if (userInput) {\n      const newItem = {\n        id: Math.random().toString(36).substring(2, 9),\n        task: userInput,\n        complete: false,\n      };\n      setTodos([...todos, newItem]);\n    }\n  };\n\n  const removeTask = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)]);\n  };\n\n  const handleToogle = (id) => {\n    setTodos([\n      ...todos.map((todo) =>\n        todo.id === id ? { ...todo, complete: !todo.complete } : { ...todo },\n      ),\n    ]);\n  };\n\n  return (\n    <div className='App'>\n      <header>\n        <h1>List: {todos.length}</h1>\n      </header>\n      <TodoForm addTask={addTask} />\n      {todos.map((todo) => {\n        return (\n          <Todo\n            todo={todo}\n            key={todo.id}\n            toggleTask={handleToogle}\n            removeTask={removeTask}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}